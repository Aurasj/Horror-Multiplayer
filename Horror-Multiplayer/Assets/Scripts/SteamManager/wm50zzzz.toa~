using Steamworks;
using TMPro;
using UnityEngine;

public class SteamChat : MonoBehaviour
{
    protected Callback<LobbyChatMsg_t> Callback_lobbyChatMsg;


    //[SerializeField] private TMP_Text chatText;
    //[SerializeField] private TMP_InputField chatBox;

    string personaName;

    ServersList serversList;


    void Start()
    {
        Callback_lobbyChatMsg = Callback<LobbyChatMsg_t>.Create(OnLobbyChatMsg);

        serversList = FindObjectOfType<ServersList>();

        if (SteamAPI.Init())
        {
            Debug.Log("Steam API init -- SUCCESS!");
            personaName = SteamFriends.GetPersonaName();
        }
        else
        {
            Debug.Log("Steam API init -- failure ...");
        }
    }

    void Update()
    {
        SteamAPI.RunCallbacks();

        //Chat
        if (chatBox.text != "")
        {
            if (Input.GetKeyDown(KeyCode.Return))
            {
                SubmitChatText(chatBox.text);
                chatBox.text = "";
            }
        }
        else
        {
            if (!chatBox.isFocused && Input.GetKeyDown(KeyCode.Return))
            {
                chatBox.ActivateInputField();
            }
        }
    }

    public void SubmitChatText(string text)
    {
        chatText.text += personaName + ": " + text + '\n';

        byte[] bytes = System.Text.Encoding.ASCII.GetBytes(text);
        Debug.Log("Chat: " + personaName + ": '" + text + "' Len: " + text.Length + " bLen: " + bytes.Length);
        SteamMatchmaking.SendLobbyChatMsg((CSteamID)serversList.current_lobbyID, bytes, bytes.Length + 1);
    }

    void OnLobbyChatMsg(LobbyChatMsg_t pCallback)
    {
        Debug.Log("[" + LobbyChatMsg_t.k_iCallback + " - LobbyChatMsg] - " + pCallback.m_ulSteamIDLobby + " -- " + pCallback.m_ulSteamIDUser + " -- " + pCallback.m_eChatEntryType + " -- " + pCallback.m_iChatID);

        CSteamID SteamIDUser;
        byte[] Data = new byte[4096];
        EChatEntryType ChatEntryType;
        int ret = SteamMatchmaking.GetLobbyChatEntry((CSteamID)pCallback.m_ulSteamIDLobby, (int)pCallback.m_iChatID, out SteamIDUser, Data, Data.Length, out ChatEntryType);

        Debug.Log("SteamMatchmaking.GetLobbyChatEntry(" + (CSteamID)pCallback.m_ulSteamIDLobby + ", " + (int)pCallback.m_iChatID + ", out SteamIDUser, Data, Data.Length, out ChatEntryType) : " + ret + " -- " + SteamIDUser + " -- " + System.Text.Encoding.UTF8.GetString(Data) + " -- " + ChatEntryType);

        //if (SteamIDUser.ToString() != SteamUser.GetSteamID().ToString())
        // {
        chatText.text = "";
        string data = System.Text.Encoding.Default.GetString(Data);
        chatText.text += personaName + ": " + data + '\n';
        //  }
    }
}
